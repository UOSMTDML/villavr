declare filename "SquareGenerator.dsp"; declare name "SquareGenerator"; declare version "2.54.11";
declare compile_options "-single -scal -I libraries/ -I project/ -lang wasm";
declare library_path0 "/libraries/stdfaust.lib";
declare library_path1 "/libraries/oscillators.lib";
declare library_path2 "/libraries/maths.lib";
declare library_path3 "/libraries/platform.lib";
declare library_path4 "/project/basics.lib";
declare library_path5 "/libraries/signals.lib";
declare author "Grame";
declare basics_lib_name "Faust Basic Element Library";
declare basics_lib_version "0.9";
declare copyright "(c)GRAME 2009";
declare filename "FaustDSP";
declare license "BSD";
declare maths_lib_author "GRAME";
declare maths_lib_copyright "GRAME";
declare maths_lib_license "LGPL with exception";
declare maths_lib_name "Faust Math Library";
declare maths_lib_version "2.5";
declare name "osci";
declare oscillators_lib_lf_sawpos_author "Bart Brouns, revised by St√©phane Letz";
declare oscillators_lib_lf_sawpos_licence "STK-4.3";
declare oscillators_lib_name "Faust Oscillator Library";
declare oscillators_lib_sawN_author "Julius O. Smith III";
declare oscillators_lib_sawN_license "STK-4.3";
declare oscillators_lib_version "0.3";
declare platform_lib_name "Generic Platform Library";
declare platform_lib_version "0.3";
declare signals_lib_name "Faust Signal Routing Library";
declare signals_lib_version "0.3";
declare version "1.0";
ID_0 = hslider("freq [unit:Hz]", 1e+03f, 1e+01f, 1e+04f, 1.0f);
ID_1 = ID_0, 23.44895f;
ID_2 = ID_1 : max;
ID_3 = (ID_2 : abs);
ID_4 = 2e+01f, ID_3;
ID_5 = (ID_4 : max);
ID_6 = fconstant(int fSamplingFreq, <math.h>);
ID_7 = 1.0f, ID_6;
ID_8 = (ID_7 : max);
ID_9 = 1.92e+05f, ID_8;
ID_10 = (ID_9 : min);
ID_11 = ID_5, ID_10;
ID_12 = (ID_11 : /);
ID_13 = _, ID_12;
ID_14 = (ID_13 : +);
ID_15 = ID_14, 0;
ID_16 = 0, ID_15;
ID_17 = ID_16 : select2;
ID_18 = (ID_17 : \(x4).(x4,(x4 : floor) : -));
ID_19 = ID_18 ~ _;
ID_20 = 2, ID_19;
ID_21 = (ID_20 : *);
ID_22 = ID_21, 1;
ID_23 = ID_22 : -;
ID_24 = \(x5).((x5,(x5 : mem) : -),(2.0f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float),(2e+01f,(hslider("freq [unit:Hz]", 1e+03f, 1e+01f, 1e+04f, 1.0f),23.44895f : max : abs) : max) : /) : /) : /), 2;
ID_25 = ID_24 : /;
ID_26 = 1, 1;
ID_27 = (ID_26 : @);
ID_28 = _, ID_27;
ID_29 = ID_28 : *;
ID_30 = ID_25 : ID_29;
ID_31 = \(x2).(x2,x2 : *) : ID_30;
ID_32 = (ID_23 : ID_31);
ID_33 = (ID_10 : float);
ID_34 = ID_33, ID_2;
ID_35 = (ID_34 : /);
ID_36 = 0.5f, ID_35;
ID_37 = (ID_36 : *);
ID_38 = 2047, ID_37;
ID_39 = (ID_38 : min);
ID_40 = 0, ID_39;
ID_41 = ID_40 : max;
ID_42 = (ID_41 : int);
ID_43 = ID_32, ID_42;
ID_44 = (ID_43 : @);
ID_45 = (ID_41 : floor);
ID_46 = ID_41, ID_45;
ID_47 = (ID_46 : -);
ID_48 = 1, ID_47;
ID_49 = (ID_48 : -);
ID_50 = ID_44, ID_49;
ID_51 = (ID_50 : *);
ID_52 = ID_32, ID_51;
ID_53 = (ID_52 : -);
ID_54 = ID_42, 1;
ID_55 = (ID_54 : +);
ID_56 = ID_32, ID_55;
ID_57 = (ID_56 : @);
ID_58 = ID_57, ID_47;
ID_59 = (ID_58 : *);
ID_60 = ID_53, ID_59;
ID_61 = (ID_60 : -);
ID_62 = hslider("volume [unit:dB]", 0.0f, -96.0f, 0.0f, 0.1f);
ID_63 = \(x6).(1e+01f,(x6,2e+01f : /) : pow) : \(x7).(\(x8).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x7 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x8 : *) : +)~_);
ID_64 = (ID_62 : ID_63);
ID_65 = ID_61, ID_64;
ID_66 = ID_65 : *;
ID_67 = vgroup("Oscillator", ID_66);
process = ID_67;
